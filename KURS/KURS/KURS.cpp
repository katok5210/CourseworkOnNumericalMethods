#include <stdio.h>
#include <iostream>
#include <math.h>
using namespace std;
const double PI = 3.141592653589793;

double f1(double t,double x, double y)
{
	return(sin(t) - 2*x + y);
}
double f2(double t,double x, double y)
{
	return( cos(t) + 4*x + 2*y);
}
double xx(double t) // точное решение x*
{
	return((14+sqrt(2))/36 * exp(2*sqrt(2)*(t-PI)) + (14 - sqrt(2)) / 36 * exp(-2 * sqrt(2) * (t - PI)) - 2 * cos(t) /9 + 2*sin(t) /9);
}
double yy(double t) // точное решение y*
{
	return((16 + 15*sqrt(2)) / 18 * exp(2 * sqrt(2) * (t - PI)) + (16 - 15*sqrt(2)) / 18 * exp(-2 * sqrt(2) * (t - PI)) - 2 * cos(t) / 9 - sin(t) / 3);
}
void RK4(float a, float b, int n)
{
	double t,x, y, h, end, k1, k2, k3, k4,m1, m2, m3, m4;
	h = (b - a) / n;
	t = PI;
	x = 1;
	y = 2;

	printf("-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	printf("         i |         t_i |             X_i |            X*_i |     |X*_i - X_i||             Y_i |            Y*_i |    |Y*_i - Y_i| |\n"
		"-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	printf("%10d | %12.7f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|\n", 0, t, x, xx(t), fabs(xx(t) - x), y,yy(t),fabs(yy(t)-y));
	

	for (int i = 1; i <= n; i++) {
		k1 = h * f1(t, x, y);
		m1 = h * f2(t, x, y);
		k2 = h * f1(t + h/ 2, x + k1 / 2, y + m1 / 2);
		m2 = h * f2(t + h/ 2, x + k1 / 2, y + m1 / 2);
		k3 = h * f1(t + h/ 2, x + k2 / 2, y + m2 / 2);
		m3 = h * f2(t + h/ 2, x + k2 / 2, y + m2 / 2);
		k4 = h * f1(t + h, x + k3 , y + m3 );
		m4 = h * f2(t + h, x + k3, y + m3 );
		x += (k1 + 2 * k2 + 2 * k3 + k4) / 6;
		y += (m1 + 2 * m2 + 2 * m3 + m4) / 6;
		t += h;


		printf("%10d | %12.7f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|\n", i, t, x, xx(t), fabs(xx(t) - x), y, yy(t), fabs(yy(t) - y));
		
	}
	printf("-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	printf("\n");
}
void Adam(float a, float b, int n)
{
	double h, end, k1, k2, k3, k4, m1, m2, m3, m4;
	h = (b - a) / n;

	double x[21];
	double t[21];
	double y[21];
	x[0]= 1;
	t[0] = PI;
	y[0] = 2;
	for (int i = 1; i <= 3; i++) {
		k1 = h * f1(t[i - 1], x[i-1], y[i-1]);
		m1 = h * f2(t[i - 1], x[i - 1], y[i - 1]);
		k2 = h * f1(t[i - 1] + h / 2, x[i - 1] + k1 / 2, y[i - 1] + m1 / 2);
		m2 = h * f2(t[i - 1] + h / 2, x[i - 1] + k1 / 2, y[i - 1] + m1 / 2);
		k3 = h * f1(t[i - 1] + h / 2, x[i - 1] + k2 / 2, y[i - 1] + m2 / 2);
		m3 = h * f2(t[i - 1] + h / 2, x[i - 1] + k2 / 2, y[i - 1] + m2 / 2);
		k4 = h * f1(t[i - 1] + h, x[i - 1] + k3, y[i - 1] + m3);
		m4 = h * f2(t[i - 1] + h, x[i - 1] + k3, y[i - 1] + m3);
		x[i] = x[i-1] + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
		y[i] = y[i - 1] + (m1 + 2 * m2 + 2 * m3 + m4) / 6;
		t[i] = t[i - 1] + h;

	}
	for (int i = 4; i <= n; i++) {
		x[i] = x[i - 1] + h / 24 * (55 * f1(t[i - 1], x[i - 1], y[i - 1]) - 59 * f1(t[i - 2], x[i - 2], y[i - 2]) + 37 * f1(t[i - 3], x[i - 3], y[i - 3]) - 9 * f1(t[i - 4], x[i - 4], y[i - 4]));
		y[i] = y[i - 1] + h / 24 * (55 * f2(t[i - 1], x[i - 1], y[i - 1]) - 59 * f2(t[i - 2], x[i - 2], y[i - 2]) + 37 * f2(t[i - 3], x[i - 3], y[i - 3]) - 9 * f2(t[i - 4], x[i - 4], y[i - 4]));
		t[i] = t[i - 1] + h;

	}
	printf("-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	printf("         i |         t_i |             X_i |            X*_i |     |X*_i - X_i||             Y_i |            Y*_i |    |Y*_i - Y_i| |\n"
		"-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	for (int i = 0; i <= n; i++) {
		printf("%10d | %12.7f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|\n", i, t[i], x[i], xx(t[i]), fabs(xx(t[i]) - x[i]), y[i], yy(t[i]), fabs(yy(t[i]) - y[i]));

	}
	printf("-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	printf("\n");
}

void Miln(float a, float b, int n)
{
	double h, end, k1, k2, k3, k4, m1, m2, m3, m4,x_1,y_1;
	h = (b - a) / n;
	double t[21];
	double x[21];
	double y[21];

	x[0] = 1;
	t[0] = PI;
	y[0] = 2;
	for (int i = 1; i <= 3; i++) {
		k1 = h * f1(t[i - 1], x[i - 1], y[i - 1]);
		m1 = h * f2(t[i - 1], x[i - 1], y[i - 1]);
		k2 = h * f1(t[i - 1] + h / 2, x[i - 1] + k1 / 2, y[i - 1] + m1 / 2);
		m2 = h * f2(t[i - 1] + h / 2, x[i - 1] + k1 / 2, y[i - 1] + m1 / 2);
		k3 = h * f1(t[i - 1] + h / 2, x[i - 1] + k2 / 2, y[i - 1] + m2 / 2);
		m3 = h * f2(t[i - 1] + h / 2, x[i - 1] + k2 / 2, y[i - 1] + m2 / 2);
		k4 = h * f1(t[i - 1] + h, x[i - 1] + k3, y[i - 1] + m3);
		m4 = h * f2(t[i - 1] + h, x[i - 1] + k3, y[i - 1] + m3);
		x[i] = x[i - 1] + (k1 + 2 * k2 + 2 * k3 + k4) / 6;
		y[i] = y[i - 1] + (m1 + 2 * m2 + 2 * m3 + m4) / 6;
		t[i] = t[i - 1] + h;

	}
	for (int i = 4; i <= n; i++) {
		t[i] = t[i - 1] + h;
		x_1 = x[i - 4] + 4 * h / 3 * (2 * f1(t[i - 3], x[i - 3], y[i - 3]) - f1(t[i - 2], x[i - 2], y[i - 2]) + 2 * f1(t[i - 1], x[i - 1], y[i - 1]));
		y_1 = y[i - 4] + 4 * h / 3 * (2 * f2(t[i - 3], x[i - 3], y[i - 3]) - f2(t[i - 2], x[i - 2], y[i - 2]) + 2 * f2(t[i - 1], x[i - 1], y[i - 1]));
		
		x[i] = x[i - 2] + h / 3 * (f1(t[i - 2], x[i - 2], y[i - 2]) + 4 * f1(t[i - 1], x[i - 1], y[i - 1]) + f1(t[i], x_1, y_1));
		y[i] = y[i - 2] + h / 3 * (f2(t[i - 2], x[i - 2], y[i - 2]) + 4 * f2(t[i - 1], x[i - 1], y[i - 1]) + f2(t[i], x_1, y_1));
	}
	printf("-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	printf("         i |         t_i |             X_i |            X*_i |     |X*_i - X_i||             Y_i |            Y*_i |    |Y*_i - Y_i| |\n"
		"-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	for (int i = 0; i <= n; i++) {
		printf("%10d | %12.7f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|%17.9f|\n", i, t[i], x[i], xx(t[i]), fabs(xx(t[i]) - x[i]), y[i], yy(t[i]), fabs(yy(t[i]) - y[i]));

	}
	printf("-----------+-------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------|\n");
	printf("\n");

}

int main(void) {
	setlocale(LC_CTYPE, "Russian");
	float a, b;
	int n;
	do {
		printf("  __\n");
		printf(" |\n");
		printf(" |  dx/dt + 2x - y = sin (t)\n");
		printf("<\n");
		printf(" |  dy/dt - 4x - 2y = cos (t)\n");
		printf(" |__\n");
		printf("\n");
		printf("x(П) = 1 , y(П) = 2\n \n[3.14;b]\nВведите b: ");
		std::cin >> b;


		printf("\nРунге-Кутта четвертого порядка точности, n=10\n\n");
		RK4(PI, b, 10);
		printf("\nМетод Адамса, n=10\n\n");
		Adam(PI, b, 10);
		printf("\nМетод Милна, n=10\n\n");
		Miln(PI, b, 10);

		printf("\nРунге-Кутта четвертого порядка точности, n=20\n\n");		
		RK4(PI, b, 20);
		printf("\nМетод Адамса, n=20\n\n");
		Adam(PI, b, 20);
		printf("\nМетод Милна, n=20\n\n");
		Miln(PI, b, 20);
		printf("\n\n");

	} while (true);
	return 0;
}
